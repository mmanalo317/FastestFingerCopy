@model FFFWebApplication.Question

@{
    ViewBag.Title = "Create";
}


<div class="edit-pages" id="edit-pages">
    <h2>Add a Question</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" style="max-height: 80%; overflow-y: scroll;">
            <p>Answers should be added in the order in which they are correct.</p>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-4">
                    Question
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.QuestionDesc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuestionDesc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4">
                    Answer #1
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.QuestionOptionA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuestionOptionA, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4">
                    Answer #2
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.QuestionOptionB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuestionOptionB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4">
                    Answer #3
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.QuestionOptionC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuestionOptionC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4">
                    Answer #4
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.QuestionOptionD, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.QuestionOptionD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4">
                    Question Set
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.QuestionSet, new { htmlAttributes = new { @class = "form-control", min = "1", max = "3" } })
                    @Html.ValidationMessageFor(model => model.QuestionSet, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <input type="submit" value="Add Question" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("< Back to List", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
