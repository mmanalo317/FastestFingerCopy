@model FFFWebApplication.User

@{
    ViewBag.Title = "Create";
}

<div class="edit-pages" id="edit-pages">
    <h2>Add a User</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" style="max-height: 80%; overflow-y: scroll; overflow-x: hidden; ">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <label class="control-label col-md-4">
                    First Name
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4">
                    Surname
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4">
                    Email
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-4">
                    Password
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @id = "password-input" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-offset-4 col-md-8">
                    <a class="btn btn-success" id="generatePassword" onclick="generatePassword()">Generate Password</a>
                </div>
            </div>


            <div class="form-group">
                <label class="control-label col-md-4">
                    Access Level
                </label>        
                <div class="col-md-8">
                    @Html.EditorFor(model => model.AccessLevel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccessLevel, "", new { @class = "text-danger" })
                    <p style="font-size:1.2rem; color:dimgrey;">Admin / Contestant</p>
                </div>
            </div>

            <div class="form-group" style="display:none;">
                <label class="control-label col-md-4">
                    Is Active
                </label>
                <div class="col-md-8">
                    @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-4 col-md-8">
                    <input type="submit" value="Add User" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    var passwordInput = document.getElementById("password-input");

    function generatePassword() {
        var chars = "0123456789abcdefghijklmnopqrstuvwxyz!#$%^&*ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        var passwordLength = 8;
        var password = "";
        for (var i = 0; i <= passwordLength; i++) {
            var randomNumber = Math.floor(Math.random() * chars.length);
            password += chars.substring(randomNumber, randomNumber +1);
        }
        document.getElementById("password-input").value = password;
    }
</script>